/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shutwid;

import java.awt.Toolkit;
import java.io.IOException;


/**
 *
 * @author Adnan & Arman
 */
public class shutWID extends javax.swing.JDialog {



    /**
     * Creates new form shutWID
     */
    
    public String OS="";
    int widthSC = ((Toolkit.getDefaultToolkit().getScreenSize().width)/2)+200;
    int xMouse,yMouse;
    
    public shutWID(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        //location 
        this.setLocation(widthSC, 0);
        
        OS = System.getProperty("os.name");
        System.out.println(OS);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        shutOFF = new javax.swing.JLabel();
        shutRE = new javax.swing.JLabel();
        shutCAN = new javax.swing.JLabel();
        exit_ = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        shutOFF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        shutOFF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                shutOFFMouseReleased(evt);
            }
        });
        getContentPane().add(shutOFF, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 5, 24, 25));

        shutRE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        shutRE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                shutREMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                shutREMouseReleased(evt);
            }
        });
        getContentPane().add(shutRE, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 5, 24, 25));

        shutCAN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        shutCAN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                shutCANMouseReleased(evt);
            }
        });
        getContentPane().add(shutCAN, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 5, 24, 25));

        exit_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_MouseClicked(evt);
            }
        });
        getContentPane().add(exit_, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 5, 24, 25));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shutwid/miniFrameEX1.png"))); // NOI18N
        bg.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                bgMouseDragged(evt);
            }
        });
        bg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bgMousePressed(evt);
            }
        });
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 35));

        setBounds(0, 0, 230, 35);
    }// </editor-fold>//GEN-END:initComponents

    private void shutOFFMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shutOFFMouseReleased
        // TODO add your handling code here:
        String comExec = "";
        if(OS.contains("Windows")){
           // System.out.println("hae");
           comExec = "shutdown -s -t 120";
        }
        else System.out.println("not supported yet...");
        
        try{
            Runtime.getRuntime().exec(comExec);
        }
        catch(IOException e){
        
        }
        
    }//GEN-LAST:event_shutOFFMouseReleased

    private void shutREMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shutREMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_shutREMousePressed

    private void shutREMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shutREMouseReleased
        // TODO add your handling code here:
        String comExec = "";
        if(OS.contains("Windows")){
           // System.out.println("hae");
           comExec = "shutdown -r -t 120";
        }
        else System.out.println("not supported yet...");
        
        try{
            Runtime.getRuntime().exec(comExec);
        }
        catch(IOException e){
        
        }
    }//GEN-LAST:event_shutREMouseReleased

    private void shutCANMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shutCANMouseReleased
        // TODO add your handling code here:
        String comExec = "";
        if(OS.contains("Windows")){
           // System.out.println("hae");
           comExec = "shutdown /a";
        }
        else System.out.println("not supported yet...");
        
        try{
            Runtime.getRuntime().exec(comExec);
        }
        catch(IOException e){
        
        }
    }//GEN-LAST:event_shutCANMouseReleased

    private void bgMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_bgMousePressed

    private void bgMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_bgMouseDragged

    private void exit_MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exit_MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(shutWID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(shutWID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(shutWID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(shutWID.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                shutWID dialog = new shutWID(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
        
        
        new Main();
        
        
        }
        
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JLabel exit_;
    private javax.swing.JLabel shutCAN;
    private javax.swing.JLabel shutOFF;
    private javax.swing.JLabel shutRE;
    // End of variables declaration//GEN-END:variables
}
